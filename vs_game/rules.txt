ѕравила соревновани€ ботов
≈сть лабиринт, он ограничен # ну и внутри бывают стены такие же
¬ лабиринте встречаютс€ * клады, и v ловушки
 огда бот собирает клад - ему начисл€етс€ одно очко, клад по€вл€етс€ в другом месте
 огда бот наступает на ловушку - он пропускает ход, ловушка деактивируетс€ и по€вл€етс€ в другом месте
Ѕоты ход€т по очереди, примерно 2000 ходов на двоих, дл€ победы надо набрать на 10% больше кладов чем бот соперника, иначе ничь€
ѕравила и все остальное тестовое, попробуем, посмотрим чего нам не хватает

«адача: написать функцию котора€ принимает на вход указатель на class с такими публичными функци€ми
class Lab
{
public:
	void SetName(std::string name);//задать им€ бота
	int GetSizeX();//размеры лабиринта по вертикали (извините)
	int GetSizeY();//размеры лабиринта по горизонтали
	char GetLab(int x, int y);//что лежит в €чейке лабиринта x,y (вернуть может '#','*','v',' ')(свой бот и соперник в лабиринте никак не обозначены, координаты узнавать через функцию)
	void GetMe(int &x, int &y);//возвращает в параметрах текущие координаты моего бота
	void GetEnemy(int &x, int &y);//текущие координаты бота соперника
}
и возвращает один из символов ('U','D','L','R' дл€ движени€ вверх вниз влево вправо, любой другой символ - сто€ть на месте)
все примеры в файлах main.cpp и players.h которые вместе вставл€ютс€ в VS или repl.it и показывают как могут два бота работать.

¬ файле main.cpp можете мен€ть лабиринт, больше ничего не надо мен€ть там, в следующей версии сделаю загрузку из файла,
от вас будет приниматьс€ только функци€ по образу test1 или test2 из файла players.h
в своей функции первой строчкой надо писать, как в примерах
L->SetName(__FUNCTION__); 
дл€ того чтобы пон€тно было кто победил
ј саму функцию называть не test, а своей фамилией, чтобы было пон€тно кто победил :)

